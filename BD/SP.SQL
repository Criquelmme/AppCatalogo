CALL SP_LISTAR_PRODUCTO (-1) 

CREATE PROCEDURE SP_LISTAR_PRODUCTO(in IN_ID_PRODUCTO INT)
begin
SELECT P.ID, P.NOMBRE, P.PRECIO, U.NOMBRE as UBICACION, P.STOCK, P.FECHA_CREACION, P.FECHA_ACTUALIZACION, p.fecha_eliminacion
FROM productos as P
inner join UBICACION as U on U.ID = P.ID_UBICACION 
where IN_ID_PRODUCTO = -1 OR P.ID = IN_ID_PRODUCTO and P.FECHA_ELIMINACION is null;
end


create procedure SP_CREAR_PRODUCTO( in IN_NOMBRE VARCHAR(100), in IN_PRECIO DECIMAL(19, 4), in IN_ID_UBICACION INT, in IN_STOCK INT) 
begin 
INSERT INTO deliv.productos
(NOMBRE, PRECIO, ID_UBICACION, STOCK, ESTADO, FECHA_CREACION, FECHA_ACTUALIZACION, FECHA_ELIMINACION)
VALUES(IN_NOMBRE, IN_PRECIO, IN_ID_UBICACION, IN_STOCK, 1, NOW(), NOW(), NULL);
end

call SP_MODIFICAR_PRODUCTO(1, 'cambio Nombre', 1000 , 1, 100, 1)

create procedure SP_MODIFICAR_PRODUCTO
(in IN_ID_PRODUCTO INT, 
in IN_NOMBRE VARCHAR(100), 
in IN_PRECIO DECIMAL(19, 4), 
in IN_ID_UBICACION INT,
in IN_STOCK INT, 
in IN_ESTADO INT) 
begin
UPDATE deliv.productos
SET NOMBRE=IN_NOMBRE, PRECIO=IN_PRECIO, ID_UBICACION=IN_ID_UBICACION, STOCK=IN_STOCK, ESTADO=IN_ESTADO, FECHA_ACTUALIZACION=NOW()
WHERE ID=IN_ID_PRODUCTO;
end

create procedure SP_ELIMINAR_PRODUCTO
(in IN_ID_PRODUCTO INT) 
begin
UPDATE productos
SET FECHA_ELIMINACION = now() 
WHERE ID= IN_ID_PRODUCTO;
end

/* UBICACION */
call SP_CREAR_UBICACION ("PRUEBA")
create procedure SP_CREAR_UBICACION  (in IN_NOMBRE VARCHAR(100)) 
begin 
INSERT INTO ubicacion
(NOMBRE, ESTADO, FECHA_CREACION, FECHA_ELIMINACION)
VALUES(IN_NOMBRE, 1, NOW(), NULL);
end

/*---------------------------------ZONAS -- */
create procedure SP_CREAR_ZONAS (in IN_NOMBRE VARCHAR(100)) 
begin 
INSERT INTO zonas
(NOMBRE_ZONA, ESTADO, FECHA_CREACION, FECHA_ELIMINACION)
VALUES(IN_NOMBRE, 1, NOW(), NULL);
end

create procedure SP_MODIFICAR_ZONAS (in ID_ZONA INT, in IN_NOMBRE VARCHAR(100), IN_ESTADO INT) 
begin 
UPDATE zonas
SET NOMBRE_ZONA=IN_NOMBRE, ESTADO=IN_ESTADO
WHERE ID=ID_ZONA;
end

create procedure SP_LISTAR_ZONAS (in ID_ZONA INT) 
begin 
SELECT ID, NOMBRE_ZONA, ESTADO
FROM zonas where FECHA_ELIMINACION is null and ID = ID_ZONA or ID_ZONA = -1;
end

create procedure SP_ELIMINAR_ZONAS (in ID_ZONA INT) 
begin 
UPDATE zonas
SET FECHA_ELIMINACION = NOW()
WHERE ID=ID_ZONA;
end


/*---------------------------------ETAPA -- */
create procedure SP_CREAR_ETAPA (in IN_NOMBRE VARCHAR(100)) 
begin 
INSERT into etapa
(NOMBRE_ETAPA, ESTADO, FECHA_CREACION, FECHA_ELIMINACION)
VALUES(IN_NOMBRE, 1, NOW(), NULL);
end

create procedure SP_MODIFICAR_ETAPA (in ID_ETAPA INT, in IN_NOMBRE VARCHAR(100), IN_ESTADO INT) 
begin 
UPDATE etapa
SET NOMBRE_ETAPA=IN_NOMBRE, ESTADO=IN_ESTADO
WHERE ID=ID_ETAPA;
end

create procedure SP_LISTAR_ETAPA (in ID_ETAPA INT) 
begin 
SELECT ID, NOMBRE_ETAPA, ESTADO
FROM etapa WHERE
 FECHA_ELIMINACION is null and ID = ID_ETAPA or ID_ETAPA = -1;
end

create procedure SP_ELIMINAR_ETAPA (in ID_ETAPA INT) 
begin 
UPDATE etapa
SET FECHA_ELIMINACION=NOW()
WHERE ID=ID_ETAPA;
end


/*---------------------------------CLIENTE -- */
create procedure SP_CREAR_CLIENTE (in IN_NOMBRE VARCHAR(100), in IN_DIRECCION VARCHAR(150), in IN_TELEFONO VARCHAR(12), in IN_CORREO VARCHAR(100)) 
begin 
INSERT INTO cliente
(NOMBRE_COMPLETO, ID_DIRECCION, TELEFONO, CORREO, ESTADO, FECHA_CREACION, FECHA_ELIMINACION)
VALUES(IN_NOMBRE, IN_DIRECCION, IN_TELEFONO, IN_CORREO, 1, NOW(), NULL);
end

create procedure SP_MODIFICAR_CLIENTE (in ID_CLIENTE INT, in IN_NOMBRE VARCHAR(100), in IN_DIRECCION INT, in IN_TELEFONO VARCHAR(12), in IN_CORREO VARCHAR(100), in IN_ESTADO INT) 
begin 
UPDATE cliente
SET NOMBRE_COMPLETO=IN_NOMBRE, ID_DIRECCION=IN_DIRECCION, TELEFONO=IN_TELEFONO, CORREO=IN_CORREO, ESTADO=IN_ESTADO
WHERE ID=ID_CLIENTE;
end

create procedure SP_LISTAR_CLIENTE (in ID_CLIENTE INT) 
begin 
SELECT ID, NOMBRE_COMPLETO, ID_DIRECCION, TELEFONO, CORREO, ESTADO, FECHA_CREACION, FECHA_ELIMINACION
FROM deliv.cliente where FECHA_ELIMINACION is null and ID = ID_CLIENTE or ID_CLIENTE = -1;
end

create procedure SP_ELIMINAR_CLIENTE (in ID_CLIENTE INT) 
begin 
UPDATE cliente
SET FECHA_ELIMINACION=NOW()
WHERE ID=ID_CLIENTE;
end


/*---------------------------------DIRECCIONES -- */
create procedure SP_CREAR_DIRECCIONES (in IN_REGION VARCHAR(100), in IN_COMUNA VARCHAR(150), in IN_DIRECCION VARCHAR(12),
in IN_REFERENCIAS VARCHAR(100), in IN_LAT VARCHAR(7), in IN_LONG VARCHAR(7), in IN_ID_ZONA INT) 
begin 
INSERT INTO direcciones
(REGION, COMUNA, DIRECCION, REFERENCIAS, LATITUD, LONGITUD, ESTADO, FECHA_CREACION, FECHA_ELIMINACION, ID_ZONA)
VALUES(IN_REGION, IN_COMUNA, IN_DIRECCION, IN_REFERENCIAS, IN_LAT, IN_LONG, 1, NOW(), NULL, IN_ID_ZONA);
end

create procedure SP_MODIFICAR_DIRECCIONES ( in IN_ID_DIRECCION INT,
in IN_REGION VARCHAR(100), in IN_COMUNA VARCHAR(150), in IN_DIRECCION VARCHAR(12),
in IN_REFERENCIAS VARCHAR(100), in IN_LAT VARCHAR(20), in IN_LONG VARCHAR(20), in IN_ID_ZONA INT, in IN_ESTADO INT) 
begin 
UPDATE deliv.direcciones
SET REGION=IN_REGION, COMUNA=IN_COMUNA, DIRECCION=IN_DIRECCION, REFERENCIAS=IN_REFERENCIAS, LATITUD=IN_LAT, LONGITUD=IN_LONG, ESTADO=IN_ESTADO, 
ID_ZONA=IN_ID_ZONA
WHERE ID=IN_ID_DIRECCION;
end

create procedure SP_LISTAR_DIRECCIONES (in ID_DIRECCION INT) 
begin 
SELECT D.ID, D.REGION, D.COMUNA, D.DIRECCION, D.REFERENCIAS, D.LATITUD, D.LONGITUD, D.ESTADO, Z.NOMBRE_ZONA 
FROM direcciones as D
inner join zonas as Z on Z.ID = D.ID_ZONA 
 where D.FECHA_ELIMINACION is null and D.ID = ID_DIRECCION or ID_DIRECCION = -1;
end

create procedure SP_ELIMINAR_DIRECCIONES (in ID_DIRECCION INT) 
begin 
UPDATE direcciones
SET FECHA_ELIMINACION=NOW()
WHERE ID=ID_DIRECCION;
end



/*---------------------------------USUARIOS -- */
create procedure SP_CREAR_USUARIOS (in IN_NOMBRES VARCHAR(100), in IN_APELLIDOS VARCHAR(150), in IN_CORREO VARCHAR(120), in IN_TELEFONO VARCHAR(15)) 
begin 
INSERT INTO usuario
(NOMBRE, APELLIDOS, CORREO, TELEFONO, ESTADO, FECHA_CREACION, FECHA_ELIMINACION)
VALUES(IN_NOMBRES, IN_APELLIDOS, IN_CORREO, IN_TELEFONO, 1, NOW(), NULL);
end

create procedure SP_MODIFICAR_USUARIOS ( in IN_ID_USUARIO INT, in IN_NOMBRES VARCHAR(100), in IN_APELLIDOS VARCHAR(150), in IN_CORREO VARCHAR(12), in IN_TELEFONO VARCHAR(15), in IN_ESTADO INT) 
begin 
UPDATE deliv.usuario
SET NOMBRE=IN_NOMBRES, APELLIDOS=IN_APELLIDOS, CORREO=IN_CORREO, TELEFONO=IN_TELEFONO, ESTADO=IN_ESTADO
WHERE ID=IN_ID_USUARIO;
end

create procedure SP_LISTAR_USUARIOS (in ID_USUARIO INT) 
begin 
SELECT ID, NOMBRE, APELLIDOS, CORREO, TELEFONO, ESTADO, FECHA_CREACION, FECHA_ELIMINACION
FROM usuario
where FECHA_ELIMINACION is null and ID = ID_USUARIO or ID_USUARIO = -1;
end

create procedure SP_ELIMINAR_USUARIOS (in ID_USUARIO INT) 
begin 
UPDATE usuario
set FECHA_ELIMINACION=NOW()
WHERE ID=ID_USUARIO;
end

/*---------------------------------PEDIDO -- */
call SP_CREAR_PEDIDO (1,1,1,3)
create procedure SP_CREAR_PEDIDO (in IN_ID_ETAPA INT, in IN_ID_USUARIO INT, in IN_ID_ORIGEN INT, in IN_ID_CLIENTE INT) 
begin 
INSERT INTO pedido_encabezado
(ID_ETAPA, ID_USUARIO, ID_ORIGEN, ID_CLIENTE, ESTADO, FECHA_CREACION, FECHA_ELIMINACION)
VALUES(IN_ID_ETAPA, IN_ID_USUARIO, IN_ID_ORIGEN, IN_ID_CLIENTE, 1, NOW(), NULL);
end


create procedure SP_CREAR_PEDIDO_DETALLE(in IN_ID_ENCABEZADO INT, in IN_ID_PRODUCTO INT, in IN_CANTIDAD INT, in IN_ID_CLIENTE INT) 
begin 
INSERT INTO pedido_detalle
(ID_PEDIDO_ENCABEZADO, ID_PRODUCTO, CANTIDAD, ESTADO, FECHA_CREACION, FECHA_ELIMINACION)
VALUES(IN_ID_ENCABEZADO, IN_ID_PRODUCTO, IN_CANTIDAD, 1, NOW(), NULL);
end


call SP_MODIFICAR_PEDIDO(1, "ZONA 1 CAMBIO" ,1)
create procedure SP_MODIFICAR_PEDIDO(in ID_PEDIDO INT, in IN_ID_CLIENTE INT, in IN_ID_PEDIDO_LISTA INT, in IN_ESTADO INT) 
begin 
UPDATE pedido 
SET ID_CLIENTE=IN_ID_CLIENTE, ID_PEDIDO_LISTA=IN_ID_PEDIDO_LISTA, ESTADO=IN_ESTADO
WHERE ID=ID_PEDIDO;
end
select * from pedido_encabezado pe 

call SP_LISTAR_PEDIDO(2)

CREATE procedure SP_LISTAR_PEDIDO (in ID_PEDIDO INT) 
begin 
SELECT P.ID,
C.NOMBRE_COMPLETO as NOMBRE_COMPLETO_CLIENTE ,
O.NOMBRE_ORIGEN,
E.NOMBRE_ETAPA,
U.NOMBRE, 
U.APELLIDOS,
U.TELEFONO,
U.CORREO,
PD.CANTIDAD,
PRODU.NOMBRE,

(select SUM(PROD.PRECIO * PDI.CANTIDAD) from PEDIDO_DETALLE as PDI
inner join PRODUCTOS as PROD on PDI.ID_PRODUCTO = PROD.ID 
where PDI.ID_PEDIDO_ENCABEZADO = ID_PEDIDO and PDI.FECHA_ELIMINACION is null) AS SUMA_PRODUCTOS

FROM PEDIDO_ENCABEZADO as P
inner join cliente as C on P.ID_CLIENTE = C.ID 
inner join ORIGEN as O on O.ID = P.ID_ORIGEN
inner join ETAPA as E on E.ID = P.ID_ETAPA
inner join usuario as U on U.ID = P.ID_USUARIO
inner join PEDIDO_DETALLE as PD on P.ID = PD.ID_PEDIDO_ENCABEZADO
inner join PRODUCTOS as PRODU on PD.ID_PRODUCTO = PRODU.ID
where P.FECHA_ELIMINACION is null and P.ID = ID_PEDIDO or ID_PEDIDO = -1;
end

create procedure SP_LISTAR_PEDIDO_DETALLE (in ID_PEDIDO INT) 
begin 
SELECT ID, ID_PEDIDO_ENCABEZADO, ID_PRODUCTO, CANTIDAD, P.NOMBRE
FROM deliv.pedido_detalle as PD
inner join PRODUCTOS as P on P.ID = PD.ID_PRODUCTO 
where PD.FECHA_ELIMINACION is null and PD.ID = ID_PEDIDO or ID_PEDIDO = -1;
end

call SP_ELIMINAR_PEDIDO(-1)
create procedure SP_ELIMINAR_PEDIDO (in ID_PEDIDO INT) 
begin 
UPDATE pedido 
set FECHA_ELIMINACION=NOW()
WHERE ID=ID_PEDIDO;
end

/* CREAR PEDIDO LISTA */

call SP_CREAR_PEDIDO_LISTA("REGION", "COMUNA", "DIRECCION", "REFERENCIA", '-00001', '-00002', 1)
CREATE procedure SP_CREAR_PEDIDO (in IN_ID_PRODUCTO INT, in CANTIDAD INT) 
begin 
INSERT INTO pedido_lista
(ID_PRODUCTO, CANTIDAD)
VALUES(IN_ID_PRODUCTO, CANTIDAD);
end

call SP_MODIFICAR_PEDIDO_LISTA()
create procedure SP_MODIFICAR_PEDIDO_LISTA (in IN_ID_PRODUCTO INT, in CANTIDAD INT, ) 
begin 
INSERT INTO pedido_lista
(ID_PRODUCTO, CANTIDAD)
VALUES(IN_ID_PRODUCTO, CANTIDAD);
end


/*---------------------------------ETAPA PEDIDO -- */
call SP_CREAR_ETAPA_PEDIDO()
create procedure SP_CREAR_ETAPA_PEDIDO (in IN_ID_PEDIDO INT, in IN_ID_ETAPA INT, in IN_ID_USUARIO INT, in IN_ID_ORIGEN INT) 
begin 
INSERT INTO etapa_pedido
(ID_PEDIDO, ID_ETAPA, ID_USUARIO, ID_ORIGEN,  ESTADO, FECHA_CREACION, FECHA_ELIMINACION)
VALUES(IN_ID_PEDIDO, IN_ID_ETAPA, IN_ID_USUARIO, IN_ID_ORIGEN, 1, NOW(), NULL);
end

call SP_MODIFICAR_ETAPA_PEDIDO(1, "ZONA 1 CAMBIO" ,1)
create procedure SP_MODIFICAR_ETAPA_PEDIDO(in ID_ETAPA_PEDIDO INT, in IN_ID_PEDIDO INT, in IN_ID_ETAPA INT, in IN_ID_USUARIO in IN_ESTADO INT) 
begin 
UPDATE etapa_pedido
SET ID_PEDIDO=IN_ID_PEDIDO, ID_ETAPA=IN_ID_ETAPA, ID_USUARIO=IN_ID_USUARIO, ESTADO=IN_ESTADO
WHERE ID=ID_ETAPA_PEDIDO;
end

call SP_LISTAR_ETAPA_PEDIDO(-1)
create procedure SP_LISTAR_ETAPA_PEDIDO (in ID_PEDIDO INT) 
begin 
SELECT ID, ID_PEDIDO, E.NOMBRE_ETAPA, U.NOMBRE, U.APELLIDOS, U.CORREO, U.TELEFONO, ESTADO, FECHA_CREACION, FECHA_ELIMINACION
FROM etapa_pedido as EP
inner join etapa as E on EP.ID_ETAPA  = E.ID 
inner join usuario as U on EP.ID_USUARIO = U.ID 
inner join origen as O on O.ID = EP.ID_ORIGEN
where P.FECHA_ELIMINACION is null and P.ID = ID_PEDIDO or ID_PEDIDO = -1;
end

call SP_ELIMINAR_ETAPA_PEDIDO(-1)
create procedure SP_ELIMINAR_ETAPA_PEDIDO (in ID_ETAPA_PEDIDO INT) 
begin 
UPDATE etapa_pedido 
set FECHA_ELIMINACION=NOW()
WHERE ID=ID_PEDIDO;
end


INSERT INTO deliv.origen
(NOMBRE_ORIGEN)
VALUES('TELEFONO');
INSERT INTO deliv.origen
(NOMBRE_ORIGEN)
VALUES('WEB');
INSERT INTO deliv.origen
(NOMBRE_ORIGEN)
VALUES('PRESENCIAL');
INSERT INTO deliv.origen
(NOMBRE_ORIGEN)
VALUES('CORREO');






